/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  31337: {
    ProtocolContract: {
      address: "0xa15bb66138824a1c7167f5e85b957d04dd34e468",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "_owner",
              type: "address",
              internalType: "address",
            },
            {
              name: "_pyusd",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "receive",
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "createDispute",
          inputs: [
            {
              name: "_requester",
              type: "address",
              internalType: "address",
            },
            {
              name: "_proofs",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "disputeCount",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint64",
              internalType: "uint64",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "disputePrice",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "disputes",
          inputs: [
            {
              name: "",
              type: "uint64",
              internalType: "uint64",
            },
          ],
          outputs: [
            {
              name: "disputeId",
              type: "uint32",
              internalType: "uint32",
            },
            {
              name: "contractAddress",
              type: "address",
              internalType: "address",
            },
            {
              name: "requester",
              type: "address",
              internalType: "address",
            },
            {
              name: "beneficiary",
              type: "address",
              internalType: "address",
            },
            {
              name: "requesterProofs",
              type: "string",
              internalType: "string",
            },
            {
              name: "beneficiaryProofs",
              type: "string",
              internalType: "string",
            },
            {
              name: "votesFor",
              type: "uint8",
              internalType: "uint8",
            },
            {
              name: "votesAgainst",
              type: "uint8",
              internalType: "uint8",
            },
            {
              name: "waitingForJudges",
              type: "bool",
              internalType: "bool",
            },
            {
              name: "isOpen",
              type: "bool",
              internalType: "bool",
            },
            {
              name: "resolved",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "factory",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "judgeWithdraw",
          inputs: [],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "judges",
          inputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "judgeAddress",
              type: "address",
              internalType: "address",
            },
            {
              name: "balance",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "reputation",
              type: "int8",
              internalType: "int8",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "numberOfVotes",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint8",
              internalType: "uint8",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "owner",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "registerAsJudge",
          inputs: [],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "registerToVote",
          inputs: [
            {
              name: "_disputeId",
              type: "uint64",
              internalType: "uint64",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "setFactoryAddress",
          inputs: [
            {
              name: "_factory",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "updateDisputeForBeneficiary",
          inputs: [
            {
              name: "_disputeId",
              type: "uint64",
              internalType: "uint64",
            },
            {
              name: "_beneficiary",
              type: "address",
              internalType: "address",
            },
            {
              name: "_proof",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "updateDisputeForPayer",
          inputs: [
            {
              name: "_disputeId",
              type: "uint64",
              internalType: "uint64",
            },
            {
              name: "_requester",
              type: "address",
              internalType: "address",
            },
            {
              name: "_proof",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "updateNumberOfVotes",
          inputs: [
            {
              name: "_newNumber",
              type: "uint8",
              internalType: "uint8",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "vote",
          inputs: [
            {
              name: "_disputeId",
              type: "uint64",
              internalType: "uint64",
            },
            {
              name: "_support",
              type: "bool",
              internalType: "bool",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "withdraw",
          inputs: [],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "event",
          name: "DisputeCreated",
          inputs: [
            {
              name: "disputeId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "requester",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "contractAddress",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "DisputeResolved",
          inputs: [
            {
              name: "disputeId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "winner",
              type: "address",
              indexed: false,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "JudgeRegistered",
          inputs: [
            {
              name: "judge",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "error",
          name: "SafeERC20FailedOperation",
          inputs: [
            {
              name: "token",
              type: "address",
              internalType: "address",
            },
          ],
        },
      ],
      inheritedFunctions: {},
      deployedOnBlock: 2,
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
